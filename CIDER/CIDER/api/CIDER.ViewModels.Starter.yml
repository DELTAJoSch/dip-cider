### YamlMime:ManagedReference
items:
- uid: CIDER.ViewModels.Starter
  commentId: T:CIDER.ViewModels.Starter
  id: Starter
  parent: CIDER.ViewModels
  children:
  - CIDER.ViewModels.Starter.Start(System.Diagnostics.ProcessStartInfo)
  langs:
  - csharp
  - vb
  name: Starter
  nameWithType: Starter
  fullName: CIDER.ViewModels.Starter
  type: Class
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: V1.1---diploma_end
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: Starter
    path: ViewModels/AboutViewModel.cs
    startLine: 126
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nA class implementing the IProcessStarter interface. Used in production code in combination with the aboutviewmodel\n"
  example: []
  syntax:
    content: 'public class Starter : IProcessStarter'
    content.vb: >-
      Public Class Starter
          Implements IProcessStarter
  inheritance:
  - System.Object
  implements:
  - CIDER.IProcessStarter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CIDER.ViewModels.Starter.Start(System.Diagnostics.ProcessStartInfo)
  commentId: M:CIDER.ViewModels.Starter.Start(System.Diagnostics.ProcessStartInfo)
  id: Start(System.Diagnostics.ProcessStartInfo)
  parent: CIDER.ViewModels.Starter
  langs:
  - csharp
  - vb
  name: Start(ProcessStartInfo)
  nameWithType: Starter.Start(ProcessStartInfo)
  fullName: CIDER.ViewModels.Starter.Start(System.Diagnostics.ProcessStartInfo)
  type: Method
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: V1.1---diploma_end
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: Start
    path: ViewModels/AboutViewModel.cs
    startLine: 132
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nThe Start-function starts a specified process\n"
  example: []
  syntax:
    content: public void Start(ProcessStartInfo info)
    parameters:
    - id: info
      type: System.Diagnostics.ProcessStartInfo
      description: ''
    content.vb: Public Sub Start(info As ProcessStartInfo)
  overload: CIDER.ViewModels.Starter.Start*
  implements:
  - CIDER.IProcessStarter.Start(System.Diagnostics.ProcessStartInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CIDER.ViewModels
  commentId: N:CIDER.ViewModels
  name: CIDER.ViewModels
  nameWithType: CIDER.ViewModels
  fullName: CIDER.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CIDER.IProcessStarter
  commentId: T:CIDER.IProcessStarter
  parent: CIDER
  name: IProcessStarter
  nameWithType: IProcessStarter
  fullName: CIDER.IProcessStarter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CIDER
  commentId: N:CIDER
  name: CIDER
  nameWithType: CIDER
  fullName: CIDER
- uid: CIDER.ViewModels.Starter.Start*
  commentId: Overload:CIDER.ViewModels.Starter.Start
  name: Start
  nameWithType: Starter.Start
  fullName: CIDER.ViewModels.Starter.Start
- uid: CIDER.IProcessStarter.Start(System.Diagnostics.ProcessStartInfo)
  commentId: M:CIDER.IProcessStarter.Start(System.Diagnostics.ProcessStartInfo)
  parent: CIDER.IProcessStarter
  isExternal: true
  name: Start(ProcessStartInfo)
  nameWithType: IProcessStarter.Start(ProcessStartInfo)
  fullName: CIDER.IProcessStarter.Start(System.Diagnostics.ProcessStartInfo)
  spec.csharp:
  - uid: CIDER.IProcessStarter.Start(System.Diagnostics.ProcessStartInfo)
    name: Start
    nameWithType: IProcessStarter.Start
    fullName: CIDER.IProcessStarter.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.ProcessStartInfo
    name: ProcessStartInfo
    nameWithType: ProcessStartInfo
    fullName: System.Diagnostics.ProcessStartInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CIDER.IProcessStarter.Start(System.Diagnostics.ProcessStartInfo)
    name: Start
    nameWithType: IProcessStarter.Start
    fullName: CIDER.IProcessStarter.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.ProcessStartInfo
    name: ProcessStartInfo
    nameWithType: ProcessStartInfo
    fullName: System.Diagnostics.ProcessStartInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.ProcessStartInfo
  commentId: T:System.Diagnostics.ProcessStartInfo
  parent: System.Diagnostics
  isExternal: true
  name: ProcessStartInfo
  nameWithType: ProcessStartInfo
  fullName: System.Diagnostics.ProcessStartInfo
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
