### YamlMime:ManagedReference
items:
- uid: CIDER.ViewModels.AboutViewModel
  commentId: T:CIDER.ViewModels.AboutViewModel
  id: AboutViewModel
  parent: CIDER.ViewModels
  children:
  - CIDER.ViewModels.AboutViewModel.#ctor(CIDER.IProcessStarter,CIDER.IKeyManager,CIDER.ILicense)
  - CIDER.ViewModels.AboutViewModel.AboutText
  - CIDER.ViewModels.AboutViewModel.ChangeThemeCommand
  - CIDER.ViewModels.AboutViewModel.InfoText
  - CIDER.ViewModels.AboutViewModel.RequestNavigateCommand
  - CIDER.ViewModels.AboutViewModel.SetApiKeyCommand
  - CIDER.ViewModels.AboutViewModel.ViewLicenseCommand
  langs:
  - csharp
  - vb
  name: AboutViewModel
  nameWithType: AboutViewModel
  fullName: CIDER.ViewModels.AboutViewModel
  type: Class
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: UiRedesign
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: AboutViewModel
    path: ViewModels/AboutViewModel.cs
    startLine: 24
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nThis is the ViewModel for the About View\nThe constructor takes a ProcessStarter Interface - this is so a seam for unit testing exists\nOn init it also sets the text in the about and information TextBlocks. They can be changed afterwards, but this is not needed in normal operation\nWhen the button in the view is pressed, the view model responds to it by calling the function fromn the processStarter interface\n"
  example: []
  syntax:
    content: 'public class AboutViewModel : ViewModelBase, INotifyPropertyChanged'
    content.vb: >-
      Public Class AboutViewModel
          Inherits ViewModelBase
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  - CIDER.MVVMBase.ViewModelBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - CIDER.MVVMBase.ViewModelBase.logger
  - CIDER.MVVMBase.ViewModelBase.PropertyChanged
  - CIDER.MVVMBase.ViewModelBase.SetProperty``1({T}@,{T},System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CIDER.ViewModels.AboutViewModel.#ctor(CIDER.IProcessStarter,CIDER.IKeyManager,CIDER.ILicense)
  commentId: M:CIDER.ViewModels.AboutViewModel.#ctor(CIDER.IProcessStarter,CIDER.IKeyManager,CIDER.ILicense)
  id: '#ctor(CIDER.IProcessStarter,CIDER.IKeyManager,CIDER.ILicense)'
  parent: CIDER.ViewModels.AboutViewModel
  langs:
  - csharp
  - vb
  name: AboutViewModel(IProcessStarter, IKeyManager, ILicense)
  nameWithType: AboutViewModel.AboutViewModel(IProcessStarter, IKeyManager, ILicense)
  fullName: CIDER.ViewModels.AboutViewModel.AboutViewModel(CIDER.IProcessStarter, CIDER.IKeyManager, CIDER.ILicense)
  type: Constructor
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: UiRedesign
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: .ctor
    path: ViewModels/AboutViewModel.cs
    startLine: 40
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nThis is the constructor for the About Viewmodel\n"
  example: []
  syntax:
    content: public AboutViewModel(IProcessStarter starter, IKeyManager manager, ILicense license)
    parameters:
    - id: starter
      type: CIDER.IProcessStarter
      description: An object implementing the IProcessStarter interface
    - id: manager
      type: CIDER.IKeyManager
      description: A keymanager object
    - id: license
      type: CIDER.ILicense
      description: An object implementing the ILicense interface
    content.vb: Public Sub New(starter As IProcessStarter, manager As IKeyManager, license As ILicense)
  overload: CIDER.ViewModels.AboutViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CIDER.ViewModels.AboutViewModel.RequestNavigateCommand
  commentId: P:CIDER.ViewModels.AboutViewModel.RequestNavigateCommand
  id: RequestNavigateCommand
  parent: CIDER.ViewModels.AboutViewModel
  langs:
  - csharp
  - vb
  name: RequestNavigateCommand
  nameWithType: AboutViewModel.RequestNavigateCommand
  fullName: CIDER.ViewModels.AboutViewModel.RequestNavigateCommand
  type: Property
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: UiRedesign
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: RequestNavigateCommand
    path: ViewModels/AboutViewModel.cs
    startLine: 62
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nCommand connected to the MailTo Button\n"
  example: []
  syntax:
    content: public ICommand RequestNavigateCommand { get; }
    parameters: []
    return:
      type: System.Windows.Input.ICommand
    content.vb: Public ReadOnly Property RequestNavigateCommand As ICommand
  overload: CIDER.ViewModels.AboutViewModel.RequestNavigateCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CIDER.ViewModels.AboutViewModel.SetApiKeyCommand
  commentId: P:CIDER.ViewModels.AboutViewModel.SetApiKeyCommand
  id: SetApiKeyCommand
  parent: CIDER.ViewModels.AboutViewModel
  langs:
  - csharp
  - vb
  name: SetApiKeyCommand
  nameWithType: AboutViewModel.SetApiKeyCommand
  fullName: CIDER.ViewModels.AboutViewModel.SetApiKeyCommand
  type: Property
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: UiRedesign
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: SetApiKeyCommand
    path: ViewModels/AboutViewModel.cs
    startLine: 72
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nCommand connected to the SetApiKey Button\n"
  example: []
  syntax:
    content: public ICommand SetApiKeyCommand { get; }
    parameters: []
    return:
      type: System.Windows.Input.ICommand
    content.vb: Public ReadOnly Property SetApiKeyCommand As ICommand
  overload: CIDER.ViewModels.AboutViewModel.SetApiKeyCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CIDER.ViewModels.AboutViewModel.ViewLicenseCommand
  commentId: P:CIDER.ViewModels.AboutViewModel.ViewLicenseCommand
  id: ViewLicenseCommand
  parent: CIDER.ViewModels.AboutViewModel
  langs:
  - csharp
  - vb
  name: ViewLicenseCommand
  nameWithType: AboutViewModel.ViewLicenseCommand
  fullName: CIDER.ViewModels.AboutViewModel.ViewLicenseCommand
  type: Property
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: UiRedesign
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: ViewLicenseCommand
    path: ViewModels/AboutViewModel.cs
    startLine: 82
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nCommand connected to the &quot;View License&quot; Button\n"
  example: []
  syntax:
    content: public ICommand ViewLicenseCommand { get; }
    parameters: []
    return:
      type: System.Windows.Input.ICommand
    content.vb: Public ReadOnly Property ViewLicenseCommand As ICommand
  overload: CIDER.ViewModels.AboutViewModel.ViewLicenseCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CIDER.ViewModels.AboutViewModel.ChangeThemeCommand
  commentId: P:CIDER.ViewModels.AboutViewModel.ChangeThemeCommand
  id: ChangeThemeCommand
  parent: CIDER.ViewModels.AboutViewModel
  langs:
  - csharp
  - vb
  name: ChangeThemeCommand
  nameWithType: AboutViewModel.ChangeThemeCommand
  fullName: CIDER.ViewModels.AboutViewModel.ChangeThemeCommand
  type: Property
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: UiRedesign
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: ChangeThemeCommand
    path: ViewModels/AboutViewModel.cs
    startLine: 92
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nCommand connected to the theme changer button\n"
  example: []
  syntax:
    content: public ICommand ChangeThemeCommand { get; }
    parameters: []
    return:
      type: System.Windows.Input.ICommand
    content.vb: Public ReadOnly Property ChangeThemeCommand As ICommand
  overload: CIDER.ViewModels.AboutViewModel.ChangeThemeCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CIDER.ViewModels.AboutViewModel.AboutText
  commentId: P:CIDER.ViewModels.AboutViewModel.AboutText
  id: AboutText
  parent: CIDER.ViewModels.AboutViewModel
  langs:
  - csharp
  - vb
  name: AboutText
  nameWithType: AboutViewModel.AboutText
  fullName: CIDER.ViewModels.AboutViewModel.AboutText
  type: Property
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: UiRedesign
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: AboutText
    path: ViewModels/AboutViewModel.cs
    startLine: 105
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nText displayed in the &quot;about&quot; textbox\n"
  example: []
  syntax:
    content: public string AboutText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AboutText As String
  overload: CIDER.ViewModels.AboutViewModel.AboutText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CIDER.ViewModels.AboutViewModel.InfoText
  commentId: P:CIDER.ViewModels.AboutViewModel.InfoText
  id: InfoText
  parent: CIDER.ViewModels.AboutViewModel
  langs:
  - csharp
  - vb
  name: InfoText
  nameWithType: AboutViewModel.InfoText
  fullName: CIDER.ViewModels.AboutViewModel.InfoText
  type: Property
  source:
    remote:
      path: CIDER/CIDER/ViewModels/AboutViewModel.cs
      branch: UiRedesign
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: InfoText
    path: ViewModels/AboutViewModel.cs
    startLine: 116
  assemblies:
  - CIDER
  namespace: CIDER.ViewModels
  summary: "\nText displayed in the &quot;info&quot; textbox\n"
  example: []
  syntax:
    content: public string InfoText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InfoText As String
  overload: CIDER.ViewModels.AboutViewModel.InfoText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CIDER.ViewModels
  commentId: N:CIDER.ViewModels
  name: CIDER.ViewModels
  nameWithType: CIDER.ViewModels
  fullName: CIDER.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CIDER.MVVMBase.ViewModelBase
  commentId: T:CIDER.MVVMBase.ViewModelBase
  parent: CIDER.MVVMBase
  name: ViewModelBase
  nameWithType: ViewModelBase
  fullName: CIDER.MVVMBase.ViewModelBase
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: CIDER.MVVMBase.ViewModelBase.logger
  commentId: F:CIDER.MVVMBase.ViewModelBase.logger
  parent: CIDER.MVVMBase.ViewModelBase
  name: logger
  nameWithType: ViewModelBase.logger
  fullName: CIDER.MVVMBase.ViewModelBase.logger
- uid: CIDER.MVVMBase.ViewModelBase.PropertyChanged
  commentId: E:CIDER.MVVMBase.ViewModelBase.PropertyChanged
  parent: CIDER.MVVMBase.ViewModelBase
  name: PropertyChanged
  nameWithType: ViewModelBase.PropertyChanged
  fullName: CIDER.MVVMBase.ViewModelBase.PropertyChanged
- uid: CIDER.MVVMBase.ViewModelBase.SetProperty``1({T}@,{T},System.String)
  commentId: M:CIDER.MVVMBase.ViewModelBase.SetProperty``1(``0@,``0,System.String)
  parent: CIDER.MVVMBase.ViewModelBase
  definition: CIDER.MVVMBase.ViewModelBase.SetProperty``1(``0@,``0,System.String)
  name: SetProperty<T>(T, T, String)
  nameWithType: ViewModelBase.SetProperty<T>(T, T, String)
  fullName: CIDER.MVVMBase.ViewModelBase.SetProperty<T>(T, T, System.String)
  nameWithType.vb: ViewModelBase.SetProperty(Of T)(T, T, String)
  fullName.vb: CIDER.MVVMBase.ViewModelBase.SetProperty(Of T)(T, T, System.String)
  name.vb: SetProperty(Of T)(T, T, String)
  spec.csharp:
  - uid: CIDER.MVVMBase.ViewModelBase.SetProperty``1(``0@,``0,System.String)
    name: SetProperty<T>
    nameWithType: ViewModelBase.SetProperty<T>
    fullName: CIDER.MVVMBase.ViewModelBase.SetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CIDER.MVVMBase.ViewModelBase.SetProperty``1(``0@,``0,System.String)
    name: SetProperty(Of T)
    nameWithType: ViewModelBase.SetProperty(Of T)
    fullName: CIDER.MVVMBase.ViewModelBase.SetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CIDER.MVVMBase
  commentId: N:CIDER.MVVMBase
  name: CIDER.MVVMBase
  nameWithType: CIDER.MVVMBase
  fullName: CIDER.MVVMBase
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: CIDER.MVVMBase.ViewModelBase.SetProperty``1(``0@,``0,System.String)
  commentId: M:CIDER.MVVMBase.ViewModelBase.SetProperty``1(``0@,``0,System.String)
  isExternal: true
  name: SetProperty<T>(T, T, String)
  nameWithType: ViewModelBase.SetProperty<T>(T, T, String)
  fullName: CIDER.MVVMBase.ViewModelBase.SetProperty<T>(T, T, System.String)
  nameWithType.vb: ViewModelBase.SetProperty(Of T)(T, T, String)
  fullName.vb: CIDER.MVVMBase.ViewModelBase.SetProperty(Of T)(T, T, System.String)
  name.vb: SetProperty(Of T)(T, T, String)
  spec.csharp:
  - uid: CIDER.MVVMBase.ViewModelBase.SetProperty``1(``0@,``0,System.String)
    name: SetProperty<T>
    nameWithType: ViewModelBase.SetProperty<T>
    fullName: CIDER.MVVMBase.ViewModelBase.SetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CIDER.MVVMBase.ViewModelBase.SetProperty``1(``0@,``0,System.String)
    name: SetProperty(Of T)
    nameWithType: ViewModelBase.SetProperty(Of T)
    fullName: CIDER.MVVMBase.ViewModelBase.SetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CIDER.ViewModels.AboutViewModel.#ctor*
  commentId: Overload:CIDER.ViewModels.AboutViewModel.#ctor
  name: AboutViewModel
  nameWithType: AboutViewModel.AboutViewModel
  fullName: CIDER.ViewModels.AboutViewModel.AboutViewModel
- uid: CIDER.IProcessStarter
  commentId: T:CIDER.IProcessStarter
  parent: CIDER
  name: IProcessStarter
  nameWithType: IProcessStarter
  fullName: CIDER.IProcessStarter
- uid: CIDER.IKeyManager
  commentId: T:CIDER.IKeyManager
  parent: CIDER
  name: IKeyManager
  nameWithType: IKeyManager
  fullName: CIDER.IKeyManager
- uid: CIDER.ILicense
  commentId: T:CIDER.ILicense
  parent: CIDER
  name: ILicense
  nameWithType: ILicense
  fullName: CIDER.ILicense
- uid: CIDER
  commentId: N:CIDER
  name: CIDER
  nameWithType: CIDER
  fullName: CIDER
- uid: CIDER.ViewModels.AboutViewModel.RequestNavigateCommand*
  commentId: Overload:CIDER.ViewModels.AboutViewModel.RequestNavigateCommand
  name: RequestNavigateCommand
  nameWithType: AboutViewModel.RequestNavigateCommand
  fullName: CIDER.ViewModels.AboutViewModel.RequestNavigateCommand
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
- uid: CIDER.ViewModels.AboutViewModel.SetApiKeyCommand*
  commentId: Overload:CIDER.ViewModels.AboutViewModel.SetApiKeyCommand
  name: SetApiKeyCommand
  nameWithType: AboutViewModel.SetApiKeyCommand
  fullName: CIDER.ViewModels.AboutViewModel.SetApiKeyCommand
- uid: CIDER.ViewModels.AboutViewModel.ViewLicenseCommand*
  commentId: Overload:CIDER.ViewModels.AboutViewModel.ViewLicenseCommand
  name: ViewLicenseCommand
  nameWithType: AboutViewModel.ViewLicenseCommand
  fullName: CIDER.ViewModels.AboutViewModel.ViewLicenseCommand
- uid: CIDER.ViewModels.AboutViewModel.ChangeThemeCommand*
  commentId: Overload:CIDER.ViewModels.AboutViewModel.ChangeThemeCommand
  name: ChangeThemeCommand
  nameWithType: AboutViewModel.ChangeThemeCommand
  fullName: CIDER.ViewModels.AboutViewModel.ChangeThemeCommand
- uid: CIDER.ViewModels.AboutViewModel.AboutText*
  commentId: Overload:CIDER.ViewModels.AboutViewModel.AboutText
  name: AboutText
  nameWithType: AboutViewModel.AboutText
  fullName: CIDER.ViewModels.AboutViewModel.AboutText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CIDER.ViewModels.AboutViewModel.InfoText*
  commentId: Overload:CIDER.ViewModels.AboutViewModel.InfoText
  name: InfoText
  nameWithType: AboutViewModel.InfoText
  fullName: CIDER.ViewModels.AboutViewModel.InfoText
