### YamlMime:ManagedReference
items:
- uid: CIDER.SystemTime
  commentId: T:CIDER.SystemTime
  id: SystemTime
  parent: CIDER
  children:
  - CIDER.SystemTime.Now
  - CIDER.SystemTime.Reset
  - CIDER.SystemTime.Set(System.DateTime)
  langs:
  - csharp
  - vb
  name: SystemTime
  nameWithType: SystemTime
  fullName: CIDER.SystemTime
  type: Class
  source:
    remote:
      path: CIDER/CIDER/SystemTime.cs
<<<<<<< HEAD
      branch: UiRedesign
=======
      branch: unit-testing
>>>>>>> 3cb47a03b74e6ac30d9e6f930117987a866e69e1
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: SystemTime
    path: SystemTime.cs
    startLine: 20
  assemblies:
  - CIDER
  namespace: CIDER
  summary: "\nThis class provides the current Time instead of DateTime.Now. Using this class the current time can be faked\nso it can be used in unit tests.There should be no other mentions of DateTime.Now anywhere in the production code.\n"
  example: []
  syntax:
    content: public class SystemTime
    content.vb: Public Class SystemTime
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CIDER.SystemTime.Set(System.DateTime)
  commentId: M:CIDER.SystemTime.Set(System.DateTime)
  id: Set(System.DateTime)
  parent: CIDER.SystemTime
  langs:
  - csharp
  - vb
  name: Set(DateTime)
  nameWithType: SystemTime.Set(DateTime)
  fullName: CIDER.SystemTime.Set(System.DateTime)
  type: Method
  source:
    remote:
      path: CIDER/CIDER/SystemTime.cs
<<<<<<< HEAD
      branch: UiRedesign
=======
      branch: unit-testing
>>>>>>> 3cb47a03b74e6ac30d9e6f930117987a866e69e1
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: Set
    path: SystemTime.cs
    startLine: 28
  assemblies:
  - CIDER
  namespace: CIDER
  summary: "\nAllows setting the &quot;fake&quot; time\n"
  example: []
  syntax:
    content: public static void Set(DateTime time)
    parameters:
    - id: time
      type: System.DateTime
      description: The time to be set
    content.vb: Public Shared Sub Set(time As Date)
  overload: CIDER.SystemTime.Set*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CIDER.SystemTime.Reset
  commentId: M:CIDER.SystemTime.Reset
  id: Reset
  parent: CIDER.SystemTime
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SystemTime.Reset()
  fullName: CIDER.SystemTime.Reset()
  type: Method
  source:
    remote:
      path: CIDER/CIDER/SystemTime.cs
<<<<<<< HEAD
      branch: UiRedesign
=======
      branch: unit-testing
>>>>>>> 3cb47a03b74e6ac30d9e6f930117987a866e69e1
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: Reset
    path: SystemTime.cs
    startLine: 36
  assemblies:
  - CIDER
  namespace: CIDER
  summary: "\nAllows resetting of the fake time\n"
  example: []
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset
  overload: CIDER.SystemTime.Reset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CIDER.SystemTime.Now
  commentId: P:CIDER.SystemTime.Now
  id: Now
  parent: CIDER.SystemTime
  langs:
  - csharp
  - vb
  name: Now
  nameWithType: SystemTime.Now
  fullName: CIDER.SystemTime.Now
  type: Property
  source:
    remote:
      path: CIDER/CIDER/SystemTime.cs
<<<<<<< HEAD
      branch: UiRedesign
=======
      branch: unit-testing
>>>>>>> 3cb47a03b74e6ac30d9e6f930117987a866e69e1
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: Now
    path: SystemTime.cs
    startLine: 44
  assemblies:
  - CIDER
  namespace: CIDER
  summary: "\nreturns either fake time or current time\n"
  example: []
  syntax:
    content: public DateTime Now { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property Now As Date
  overload: CIDER.SystemTime.Now*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CIDER
  commentId: N:CIDER
  name: CIDER
  nameWithType: CIDER
  fullName: CIDER
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CIDER.SystemTime.Set*
  commentId: Overload:CIDER.SystemTime.Set
  name: Set
  nameWithType: SystemTime.Set
  fullName: CIDER.SystemTime.Set
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: CIDER.SystemTime.Reset*
  commentId: Overload:CIDER.SystemTime.Reset
  name: Reset
  nameWithType: SystemTime.Reset
  fullName: CIDER.SystemTime.Reset
- uid: CIDER.SystemTime.Now*
  commentId: Overload:CIDER.SystemTime.Now
  name: Now
  nameWithType: SystemTime.Now
  fullName: CIDER.SystemTime.Now
