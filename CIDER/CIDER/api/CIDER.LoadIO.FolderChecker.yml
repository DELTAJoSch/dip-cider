### YamlMime:ManagedReference
items:
- uid: CIDER.LoadIO.FolderChecker
  commentId: T:CIDER.LoadIO.FolderChecker
  id: FolderChecker
  parent: CIDER.LoadIO
  children:
  - CIDER.LoadIO.FolderChecker.IsCorrectFolder(System.String)
  langs:
  - csharp
  - vb
  name: FolderChecker
  nameWithType: FolderChecker
  fullName: CIDER.LoadIO.FolderChecker
  type: Class
  source:
    remote:
      path: CIDER/CIDER/LoadIO/FolderChecker.cs
<<<<<<< HEAD
      branch: UiRedesign
=======
      branch: unit-testing
>>>>>>> 3cb47a03b74e6ac30d9e6f930117987a866e69e1
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: FolderChecker
    path: LoadIO/FolderChecker.cs
    startLine: 20
  assemblies:
  - CIDER
  namespace: CIDER.LoadIO
  summary: "\nThis class implements the IChecker interface. The purpose of this class is to check if a selected folder contains valid data.\n"
  example: []
  syntax:
    content: 'public class FolderChecker : IChecker'
    content.vb: >-
      Public Class FolderChecker
          Implements IChecker
  inheritance:
  - System.Object
  implements:
  - CIDER.LoadIO.IChecker
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CIDER.LoadIO.FolderChecker.IsCorrectFolder(System.String)
  commentId: M:CIDER.LoadIO.FolderChecker.IsCorrectFolder(System.String)
  id: IsCorrectFolder(System.String)
  parent: CIDER.LoadIO.FolderChecker
  langs:
  - csharp
  - vb
  name: IsCorrectFolder(String)
  nameWithType: FolderChecker.IsCorrectFolder(String)
  fullName: CIDER.LoadIO.FolderChecker.IsCorrectFolder(System.String)
  type: Method
  source:
    remote:
      path: CIDER/CIDER/LoadIO/FolderChecker.cs
<<<<<<< HEAD
      branch: UiRedesign
=======
      branch: unit-testing
>>>>>>> 3cb47a03b74e6ac30d9e6f930117987a866e69e1
      repo: git@github.com:DELTAJoSch/dip-cider.git
    id: IsCorrectFolder
    path: LoadIO/FolderChecker.cs
    startLine: 29
  assemblies:
  - CIDER
  namespace: CIDER.LoadIO
  summary: "\nThis function checks the integrity of the data in the selected folder.\n"
  example: []
  syntax:
    content: public bool IsCorrectFolder(string Path)
    parameters:
    - id: Path
      type: System.String
      description: A path to the folder
    return:
      type: System.Boolean
      description: Returns true if the folder contains the correct data
    content.vb: Public Function IsCorrectFolder(Path As String) As Boolean
  overload: CIDER.LoadIO.FolderChecker.IsCorrectFolder*
  implements:
  - CIDER.LoadIO.IChecker.IsCorrectFolder(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CIDER.LoadIO
  commentId: N:CIDER.LoadIO
  name: CIDER.LoadIO
  nameWithType: CIDER.LoadIO
  fullName: CIDER.LoadIO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CIDER.LoadIO.IChecker
  commentId: T:CIDER.LoadIO.IChecker
  parent: CIDER.LoadIO
  name: IChecker
  nameWithType: IChecker
  fullName: CIDER.LoadIO.IChecker
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CIDER.LoadIO.FolderChecker.IsCorrectFolder*
  commentId: Overload:CIDER.LoadIO.FolderChecker.IsCorrectFolder
  name: IsCorrectFolder
  nameWithType: FolderChecker.IsCorrectFolder
  fullName: CIDER.LoadIO.FolderChecker.IsCorrectFolder
- uid: CIDER.LoadIO.IChecker.IsCorrectFolder(System.String)
  commentId: M:CIDER.LoadIO.IChecker.IsCorrectFolder(System.String)
  parent: CIDER.LoadIO.IChecker
  isExternal: true
  name: IsCorrectFolder(String)
  nameWithType: IChecker.IsCorrectFolder(String)
  fullName: CIDER.LoadIO.IChecker.IsCorrectFolder(System.String)
  spec.csharp:
  - uid: CIDER.LoadIO.IChecker.IsCorrectFolder(System.String)
    name: IsCorrectFolder
    nameWithType: IChecker.IsCorrectFolder
    fullName: CIDER.LoadIO.IChecker.IsCorrectFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CIDER.LoadIO.IChecker.IsCorrectFolder(System.String)
    name: IsCorrectFolder
    nameWithType: IChecker.IsCorrectFolder
    fullName: CIDER.LoadIO.IChecker.IsCorrectFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
